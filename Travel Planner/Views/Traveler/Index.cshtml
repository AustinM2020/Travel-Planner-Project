@model Travel_Planner.Models.TravelerPlacesViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    #map {
        position:relative;
        height: 450px;
        width: 100%;
        border-radius: 20px;
        border-style: none;
        top: 30px;
    }
    #citySearch {
        width: 200px;
        margin-right: 10px;
        margin-bottom: 10px;
        margin-top: 10px;
    }
    #vacationEnd {
        width: 200px;
        margin-left: 10px;
        margin-right: 10px;
        margin-bottom: 10px;
        margin-top: 10px;
    }
    #vacationStart {
        width: 200px;
        margin-left: 10px;
        margin-right: 10px;
        margin-bottom: 10px;
        margin-top: 10px;
    }

    input {
        display:inline;
        float: left;
    }
    #yourVacations {
        position: relative;
        right: 648px;
        top:25px;
        margin-bottom: 10px;
    }
    #add {
        margin-top: 10px;
    }
</style>
<h1 id="add">Add New Vacation</h1>
@if(Model.exists == true)
{
    <div class="alert alert-dismissible alert-dark">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <p>A Vacation Already Exisits On This Date</p>
    </div>
}
<form id="vacationInput" asp-action="Index" method="post">
    <div>
        <h5>
            <span>
                <input class="form-control" id="citySearch" type="text" name="vacationDestination" placeholder="ex:Tokyo" required/>
                <input id="cityLat" type="hidden" name="lat" />
                <input id="cityLng" type="hidden" name="lng" />
                <input class="form-control" type="date" id="vacationStart" name="vacationStart" required />
                <input class="form-control" type="date" id="vacationEnd" name="vacationEnd" required />
            </span>
        </h5> 
        <button class="btn btn-info" style="margin-top:10px;" type="submit" value="Submit">Add</button><br />
    </div>
</form>
<h2 id="yourVacations">Your Vacations</h2>
<div id="map"></div>
<script>
    var map;
    var vacationPosition = [];
    var vacationTitles = [];
    var vacationIds = [];
    @for (int i = 0; i < Model.Vacations.Count; i++)
    {
        @:vacationPosition.push({ lat: @Model.Vacations[i].Lat.Value, lng: @Model.Vacations[i].Long.Value});
        @:vacationTitles.push('@Model.Vacations[i].Destination');
        @:vacationIds.push(@Model.Vacations[i].Id);
    }
    var center = { lat: 40.4168, lng: 3.7038 };
    var worldBounds = {
        north: 85,
        south: -85,
        west: 200,
        east: -200,
      };
    function initMap() {      
        map = new google.maps.Map(document.getElementById('map'), {
            center: center,
            disableDefaultUI: true,
            mapTypeId: 'terrain',
            restriction: {
            latLngBounds: worldBounds,
            strictBounds: false,
            },
            zoom: 2,
            minZoom: 2,
            styles: 
            [
              {
                "elementType": "geometry",
                "stylers": [
                  {
                    "color": "#f5f5f5"
                  }
                ]
              },
              {
                "elementType": "labels.icon",
                "stylers": [
                  {
                    "visibility": "on"
                  }
                ]
              },
              {
                "elementType": "labels.text.fill",
                "stylers": [
                  {
                    "color": "#616161"
                  }
                ]
              },
              {
                "elementType": "labels.text.stroke",
                "stylers": [
                  {
                    "color": "#f5f5f5"
                  }
                ]
              },{
                "featureType": "administrative.country",
                "elementType": "geometry.stroke",
                "stylers": [
                    {
                        "visibility": "on",
                        "color": "#000000"
                    }
                ]
              },{
                "featureType": "administrative.province",
                "elementType": "geometry.stroke",
                "stylers": [
                    {
                        "visibility": "on",
                        "color": "#000000",
                    }
                ]
              },{
                "featureType": "administrative.locality",
                "elementType": "geometry.stroke",
                "stylers": [
                    {
                        "visibility": "on",
                        "color": "#616161"
                    }
                ]
              },{
                "featureType": "administrative.neighborhood",
                "elementType": "geometry.stroke",
                "stylers": [
                    {
                        "visibility": "on",
                        "color": "#616161"
                    }
                ]
              },{
                "featureType": "administrative.land_parcel",
                "elementType": "labels.text.fill",
                "stylers": [
                  {
                    "visibility": "on",
                    "color": "#616161"
                  }
                ]
              },
              {
                "featureType": "poi",
                "elementType": "geometry",
                "stylers": [
                  {
                    "color": "#eeeeee"
                  }
                ]
              },
              {
                "featureType": "poi",
                "elementType": "labels.text.fill",
                "stylers": [
                  {
                    "color": "#757575"
                  }
                ]
              },
              {
                "featureType": "poi.park",
                "elementType": "geometry",
                "stylers": [
                  {
                    "color": "#e5e5e5"
                  }
                ]
              },
              {
                "featureType": "poi.park",
                "elementType": "labels.text.fill",
                "stylers": [
                  {
                    "color": "#9e9e9e"
                  }
                ]
              },
              {
                "featureType": "road",
                "elementType": "geometry",
                "stylers": [
                  {
                    "color": "#ffffff"
                  }
                ]
              },
              {
                "featureType": "road.arterial",
                "elementType": "labels.text.fill",
                "stylers": [
                  {
                    "color": "#757575"
                  }
                ]
              },
              {
                "featureType": "road.highway",
                "elementType": "geometry",
                "stylers": [
                  {
                    "color": "#dadada"
                  }
                ]
              },
              {
                "featureType": "road.highway",
                "elementType": "labels.text.fill",
                "stylers": [
                  {
                    "color": "#616161"
                  }
                ]
              },
              {
                "featureType": "road.local",
                "elementType": "labels.text.fill",
                "stylers": [
                  {
                    "color": "#9e9e9e"
                  }
                ]
              },
              {
                "featureType": "transit.line",
                "elementType": "geometry",
                "stylers": [
                  {
                    "color": "#e5e5e5"
                  }
                ]
              },
              {
                "featureType": "transit.station",
                "elementType": "geometry",
                "stylers": [
                  {
                    "color": "#eeeeee"
                  }
                ]
              },
              {
                "featureType": "water",
                "elementType": "geometry",
                "stylers": [
                  {
                    "color": "#c9c9c9"
                  }
                ]
              },
              {
                "featureType": "water",
                "elementType": "labels.text.fill",
                "stylers": [
                  {
                    "color": "#9e9e9e"
                  }
                ]
              }
            ]
        });
        var markerA
        markerA = new google.maps.Marker({
            position: { lat: @Model.Traveler.Lat.Value, lng: @Model.Traveler.Long.Value},
            title: 'Home',
            icon: {
                url: "http://maps.google.com/mapfiles/ms/icons/green-dot.png"
            },
            map:map
        })
        var i;  
        var marker;
        var flightPath;
        for (i = 0; i < vacationTitles.length; i++) {
            var permalink = "https://localhost:44350/Vacations/Index?Id=" + vacationIds[i] + "";
            marker = new google.maps.Marker({
                position: vacationPosition[i],
                title: vacationTitles[i],
                animation: google.maps.Animation.DROP,
                url: permalink,
                icon: {
                    url: "http://maps.google.com/mapfiles/ms/icons/blue-dot.png"
                },
                map:map
            });
            (function(permalink) {
            google.maps.event.addListener(marker, 'click', function() {self.location.href = permalink;});
            })(permalink); 
            var flightPathCoords = [
                { lat: @Model.Traveler.Lat.Value, lng: @Model.Traveler.Long.Value},
                vacationPosition[i]
            ];
            flightPath = new google.maps.Polyline({
                path: flightPathCoords,
                geodesic: true,
                strokeColor: '#0BE013',
                strokeOpacity: 1.0,
                strokeWeight: 1
            });
            flightPath.setMap(map);
        }

        var options = {
            types: ['(cities)']
        }
        var input = document.getElementById('citySearch');
        var autocomplete = new google.maps.places.Autocomplete(input, options);
        google.maps.event.addListener(autocomplete, 'place_changed', function () {
            var place = autocomplete.getPlace();
            document.getElementById('cityLat').value = place.geometry.location.lat();
            document.getElementById('cityLng').value = place.geometry.location.lng();
        })       
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=@APIkeys.googleApi&libraries=places&callback=initMap" async defer></script>



