@model Travel_Planner.Models.TravelerPlacesViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    #map {
        height: 300px;
        width: 100%;
        border-radius: 20px;
        border-style: none;
    }

    #markersA {
        margin-top: 10px;
        margin-bottom: 10px;
        margin-right: 5px;
        background-color: lightgreen;
        border-color: none;
    }

    #markersB {
        margin-top: 10px;
        margin-bottom: 10px;
        margin-right: 5px;
        margin-left: 5px;
    }

    #markersC {
        margin-top: 10px;
        margin-bottom: 10px;
        margin-right: 5px;
        margin-left: 5px;
    }

    #Destination {
        margin-top: 10px;
    }

    #checkIn {
        width: 170px;
    }

    #adults {
        width: 60px;
    }

    #nights {
        width: 60px;
    }
    #rooms {
        width: 60px;
    }
    #destination{
        width: 150px;
    }
    #origin{
        width: 150px;
    }
    input, label {
        display:block;
    }
    #departDate{
        width: 170px;
    }
    #returnDate{
        width: 170px;
    }
    #flightAdults{
        width: 60px;
    }
</style>
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h1 id="Destination">@Model.Vacation.Destination</h1>
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-5">
            <button class="btn btn" id="markersA" onclick="addMakersA()">@Model.Traveler.InterestOne</button>
            <button class="btn btn-info" id="markersB" onclick="addMarkersB()">@Model.Traveler.InterestTwo</button>
            <button class="btn btn-secondary" id="markersC" onclick="addMarkersC()">@Model.Traveler.InterestThree</button>
            <div id="map"></div>
        </div>
        <div style="text-align: center; border-color: black;" class="col-md-1">
            <p>Today</p>
            <p id="tempToday"></p>
            <p>Forcast:</p>
            <p id="conToday"></p>
        </div>
        <div style="text-align: center; border-color: black;" class="col-md-1">
            <p id="day1"></p>
            <p id="day1Temp"></p>
            <p>Forcast:</p>
            <p id="day1Con"></p>
        </div>
        <div style="text-align: center;" class="col-md-1">
            <p id="day2"></p>
            <p id="day2Temp"></p>
            <p>Forcast:</p>
            <p id="day2Con"></p>
        </div>
        <div style="text-align: center;" class="col-md-1">
            <p id="day3"></p>
            <p id="day3Temp"></p>
            <p>Forcast:</p>
            <p id="day3Con"></p>
        </div>
        <div style="text-align: center;" class="col-md-1">
            <p id="day4"></p>
            <p id="day4Temp"></p>
            <p>Forcast:</p>
            <p id="day4Con"></p>
        </div>
        <div style="text-align: center;" class="col-md-1">
            <p id="day5"></p>
            <p id="day5Temp"></p>
            <p>Forcast:</p>
            <p id="day5Con"></p>
        </div>
        <div style="text-align: center;" class="col-md-1">
            <p id="day6"></p>
            <p id="day6Temp"></p>
            <p>Forcast:</p>
            <p id="day6Con"></p>
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <form id="searchHotels" onsubmit="getHotels();return false">
                <h3 style="margin-top: 20px;">Search Hotels</h3>
                    <p>
                        <input id="destinationId" type="hidden" value="@Model.Vacation.DestinationId"/>
                        <div style="float:left; margin-right:10px;">
                            <label for="checkIn">Check-In</label>
                            <input class="form-control" id="checkIn" name="checkIn" type="date" />
                        </div>
                        <div style="float:left; margin-right:10px;">
                            <label for="nights">Nights</label>
                            <input title="Nights" class="form-control" id="nights" name="nights" type="number" min="1" max="9" />
                        </div>
                        <div style="float:left; margin-right:10px;">
                            <label for="adults">Adults</label>
                            <input title="Adults" class="form-control" id="adults" type="number" min="1" max="9" />
                        </div>
                        <div style="float:left; margin-right:10px;">
                            <label for="rooms">Rooms</label>
                            <input title="Rooms" class="form-control" id="rooms" type="number" name="rooms" min="1" max="9" />
                        </div>
                        <button style="margin-top: 30px;" type="submit" class="btn btn-warning">Search</button>
                    </p>
            </form>    
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-1">
            <button id="next" style="margin-top: 125px; display:none;" class="btn btn-info" onclick="displayHotelBack()">Prev</button>
        </div>
        <div class="col-md-5">
            <img style="width: 100%; height:250px; border-radius:10px; display:none; margin-bottom: 20px;" alt="No Photo Found" id="hotelImg"/>
        </div>
        <div class="col-md-5">
            <h1 id="hotelName"></h1>
            <h3 id="hotelRating"></h3>
            <h3 id="hotelPrice"></h3>
            <form asp-action="AddHotel" method="get">
                <div>
                    <input type="hidden" value="@Model.Vacation.Id" name="vacationId" />
                    <input type="date" style="display:none;" id="addCheckIn" name="addCheckIn" />
                    <input type="hidden" name="addName" id="addName" />
                    <input type="hidden" id="addNights" name="addNights" />
                    <input type="hidden" id="addAdults" name="addAdults" />
                    <input type="hidden" id="addRooms" name="addRooms" />
                    <input type="hidden" id="addRate" name="addRate" />
                    <input type="hidden" id="hotelOffer" name="link" />
                    <input type="hidden" id="hotelOfferName" name="linkName" />
                    <button type="submit" id="addHotel" target="_blank" class="btn btn-secondary" style="display:none;" >Select Hotel</button>
                </div>
            </form>
        </div>
        <div class="col-md-1">
            <button id="prev" style="margin-top: 125px; display:none;" class="btn btn-info" onclick="displayHotelForward()">Next</button>
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <form onsubmit="getAuth();return false">
                <h3>Search Flights</h3>
                <p>
                    <div style="float:left; margin-right:10px;">
                        <label for="origin">Departing Airport</label>
                        <input class="form-control" type="text" name="origin" id="origin" placeholder="Ex:MKE" />
                    </div>
                    <div style="float:left; margin-right:10px;">
                        <label for="destination">Arrival Airport</label>
                        <input class="form-control" type="text" name="destination" id="destination" placeholder="Ex:ORD" />
                    </div>
                    <div style="float:left; margin-right:10px;">
                        <label for="departDate">Departure Date</label>
                        <input class="form-control" type="date" id="departDate" name="departDate" />
                    </div>
                    <div style="float:left; margin-right:10px;">
                        <label for="returnDate">Return Date</label>
                        <input class="form-control" type="date" id="returnDate" name="returnDate" />
                    </div>
                    <div style="float:left; margin-right:10px;">
                        <label for="flightAdults">Adults</label>
                        <input class="form-control" type="number" id="flightAdults" name="flightAdults" />
                    </div>
                    <button style="margin-top: 30px;" type="submit" id="searchFlights" class="btn btn-warning">Search Flights</button>
                </p>
            </form>
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-1">
            <button id="prevFlight" style="margin-top: 125px; display:none;" class="btn btn-info" onclick="displayFlightBack()">Prev</button>
        </div>
        <div style="text-align:center;" class="col-md-10">
            <h2 style="margin-top: 20px;" id="flightOne"></h2>
            <h5><span id="flight1Date"></span><span style="margin-left: 20px; margin-right: 20px;" id="flight1Time"></span><span id="flight1Dur"></span></h5>
            <h2 id="flightTwo"></h2>
            <h5><span id="flight2Date"></span><span style="margin-left: 20px; margin-right: 20px;" id="flight2Time"></span><span id="flight2Dur"></span></h5>
            <h5 id="flightPrice"></h5>
        </div>
        <div class="col-md-1">
            <button id="nextFlight" style="margin-top: 125px; display:none;" class="btn btn-info" onclick="displayFlightForward()">Next</button>
        </div>
    </div>
</div>
        <script>
    var placesOneLocations = [];
    var placesTwoLocations = [];
    var placesThreeLocations = [];
    var placesOneTitles = [];
    var placesTwoTitles = [];
    var placesThreeTitles = [];
    @for(int i = 0; i < Model.PlacesOne.results.Length; i++)
    {
        @:placesOneLocations.push({ lat: @Model.PlacesOne.results[i].geometry.location.lat, lng: @Model.PlacesOne.results[i].geometry.location.lng});
        @:placesOneTitles.push('@Model.PlacesOne.results[i].name');
    }
    @for(int i = 0; i < Model.PlacesTwo.results.Length; i++)
    {
        @:placesTwoLocations.push({ lat: @Model.PlacesTwo.results[i].geometry.location.lat, lng: @Model.PlacesTwo.results[i].geometry.location.lng});
        @:placesTwoTitles.push('@Model.PlacesTwo.results[i].name');
    }
    @for(int i = 0; i < Model.PlacesThree.results.Length; i++)
    {
        @:placesThreeLocations.push({ lat: @Model.PlacesThree.results[i].geometry.location.lat, lng: @Model.PlacesThree.results[i].geometry.location.lng});
        @:placesThreeTitles.push('@Model.PlacesThree.results[i].name');
    }
    var map;
    var center = { lat: @Model.Vacation.Lat.Value, lng: @Model.Vacation.Long.Value };
    var worldBounds = {
        north: 85,
        south: -85,
        west: 200,
        east: -200,
    };
    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: center,
            disableDefaultUI: true,
            mapTypeId: 'terrain',
            restriction: {
                latLngBounds: worldBounds,
                strictBounds: false,
            },
            zoom: 11,
            minZoom: 2,
            styles:
                [
                    {
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#f5f5f5"
                            }
                        ]
                    },
                    {
                        "elementType": "labels.icon",
                        "stylers": [
                            {
                                "visibility": "on"
                            }
                        ]
                    },
                    {
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#616161"
                            }
                        ]
                    },
                    {
                        "elementType": "labels.text.stroke",
                        "stylers": [
                            {
                                "color": "#f5f5f5"
                            }
                        ]
                    }, {
                        "featureType": "administrative.country",
                        "elementType": "geometry.stroke",
                        "stylers": [
                            {
                                "visibility": "on",
                                "color": "#000000"
                            }
                        ]
                    }, {
                        "featureType": "administrative.province",
                        "elementType": "geometry.stroke",
                        "stylers": [
                            {
                                "visibility": "on",
                                "color": "#000000",
                            }
                        ]
                    }, {
                        "featureType": "administrative.locality",
                        "elementType": "geometry.stroke",
                        "stylers": [
                            {
                                "visibility": "on",
                                "color": "#616161"
                            }
                        ]
                    }, {
                        "featureType": "administrative.neighborhood",
                        "elementType": "geometry.stroke",
                        "stylers": [
                            {
                                "visibility": "on",
                                "color": "#616161"
                            }
                        ]
                    }, {
                        "featureType": "administrative.land_parcel",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "visibility": "on",
                                "color": "#616161"
                            }
                        ]
                    },
                    {
                        "featureType": "poi",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#eeeeee"
                            }
                        ]
                    },
                    {
                        "featureType": "poi",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#757575"
                            }
                        ]
                    },
                    {
                        "featureType": "poi.park",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#e5e5e5"
                            }
                        ]
                    },
                    {
                        "featureType": "poi.park",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#9e9e9e"
                            }
                        ]
                    },
                    {
                        "featureType": "road",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#ffffff"
                            }
                        ]
                    },
                    {
                        "featureType": "road.arterial",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#757575"
                            }
                        ]
                    },
                    {
                        "featureType": "road.highway",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#dadada"
                            }
                        ]
                    },
                    {
                        "featureType": "road.highway",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#616161"
                            }
                        ]
                    },
                    {
                        "featureType": "road.local",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#9e9e9e"
                            }
                        ]
                    },
                    {
                        "featureType": "transit.line",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#e5e5e5"
                            }
                        ]
                    },
                    {
                        "featureType": "transit.station",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#eeeeee"
                            }
                        ]
                    },
                    {
                        "featureType": "water",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#c9c9c9"
                            }
                        ]
                    },
                    {
                        "featureType": "water",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#9e9e9e"
                            }
                        ]
                    }
                ]
        });
    }
    var markersA = [];
    var markersB = [];
    var markersC = [];
    function addMakersA() {
        var i;
        if (markersA.length == 0) {
            for (i = 0; i < placesOneTitles.length; i++) {
                var marker = new google.maps.Marker({
                    position: placesOneLocations[i],
                    title: placesOneTitles[i],
                    animation: google.maps.Animation.DROP,
                    icon: {
                        url: "http://maps.google.com/mapfiles/ms/icons/green-dot.png"
                    }
                });
                markersA.push(marker);
            }
        }
        showMarkersA();
    }
    function showMarkersA() {
        var i;
        for (i = 0; i < markersA.length; i++) {
            markersA[i].setMap(map);
        }
        var j;
        for (j = 0; j < markersB.length; j++) {
            markersB[j].setMap(null);
        }
        var k;
        for (k = 0; k < markersC.length; k++) {
            markersC[k].setMap(null);
        }
    }
    function addMarkersB() {
        var i;
        if (markersB.length == 0) {
            for (i = 0; i < placesTwoTitles.length; i++) {
                var marker = new google.maps.Marker({
                    position: placesTwoLocations[i],
                    title: placesTwoTitles[i],
                    animation: google.maps.Animation.DROP,
                    icon: {
                        url: "http://maps.google.com/mapfiles/ms/icons/blue-dot.png"
                    }
                });
                markersB.push(marker);
            }
        }
        showMarkersB();
    }
    function showMarkersB() {
        var i;
        for (i = 0; i < markersA.length; i++) {
            markersA[i].setMap(null);
        }
        var j;
        for (j = 0; j < markersB.length; j++) {
            markersB[j].setMap(map);
        }
        var k;
        for (k = 0; k < markersC.length; k++) {
            markersC[k].setMap(null);
        }
    }
    function addMarkersC(){
        var i;
        if (markersC.length == 0) {
            for (i = 0; i < placesThreeTitles.length; i++) {
                var marker = new google.maps.Marker({
                    position: placesThreeLocations[i],
                    title: placesThreeTitles[i],
                    animation: google.maps.Animation.DROP,
                    icon: {
                        url: "http://maps.google.com/mapfiles/ms/icons/pink-dot.png"
                    }
                });
                markersC.push(marker);
            }
        }
        showMarkersC();
    }
    function showMarkersC() {
       var i;
        for (i = 0; i < markersA.length; i++) {
            markersA[i].setMap(null);
        }
        var j;
        for (j = 0; j < markersB.length; j++) {
            markersB[j].setMap(null);
        }
        var k;
        for (k = 0; k < markersC.length; k++) {
            markersC[k].setMap(map);
        }
    }
    var hotels = [];
    var counter = -1;
    function getHotels() {
        var destinationId = document.getElementById('destinationId').value;
        var checkIn = document.getElementById('checkIn').value;
        var nights = document.getElementById('nights').value;
        var adults = document.getElementById('adults').value;
        var rooms = document.getElementById('rooms').value;
        document.getElementById('addCheckIn').value = checkIn;
        document.getElementById('addNights').value = nights;
        document.getElementById('addAdults').value = adults;
        document.getElementById('addRooms').value = rooms;
        var settings = {
	        "async": true,
	        "crossDomain": true,
	        "url": `https://tripadvisor1.p.rapidapi.com/hotels/list?offset=0&currency=USD&limit=30&order=asc&lang=en_US&sort=recommended&location_id=${destinationId}&adults=${adults}&checkin=${checkIn}&rooms=${rooms}&nights=${nights}`,
	        "method": "GET",
	        "headers": {
		        "x-rapidapi-host": "tripadvisor1.p.rapidapi.com",
		        "x-rapidapi-key": "@APIkeys.hotelApi"
	        }
        }

        $.ajax(settings).done(function (response) {
            console.log(response);
            hotels = response;
        });
        counter = -1;
        document.getElementById('prev').style.display = 'block';
        document.getElementById('next').style.display = 'block';
        document.getElementById('hotelImg').style.display = 'block';
        document.getElementById('addHotel').style.display = 'block';
        displayHotelForward();
    }

    function displayHotelForward() {
        if (hotels.data != null) {
            if (counter < hotels.data.length) {
                counter++;
                if (hotels.data[counter].name != null) {
                    document.getElementById('hotelName').innerHTML = hotels.data[counter].name;
                }
                if (hotels.data[counter].rating != null) {
                    document.getElementById('hotelRating').innerHTML = `Rating: ${hotels.data[counter].rating}/5`;
                }
                if (hotels.data[counter].price != null) {
                    document.getElementById('hotelPrice').innerHTML = `Price: ${hotels.data[counter].price}`;
                }
                if (hotels.data[counter].photo != null) {
                    document.getElementById('hotelImg').src = hotels.data[counter].photo.images.medium.url;
                }
                if (hotels.data[counter].hac_offers.offers != null) {
                    document.getElementById('hotelOffer').value = hotels.data[counter].hac_offers.offers[0].link;
                    document.getElementById('hotelOfferName').value = hotels.data[counter].hac_offers.offers[0].provider_display_name;
                }
                document.getElementById('addName').value = hotels.data[counter].name;
                document.getElementById('addRate').value = hotels.data[counter].price;
            }

        }
        else
        {
            setTimeout(function() { displayHotelForward(); }, 10);
        }
    }
    function displayHotelBack() {
        if (hotels.data != null ) {
            if (counter >= 0) {
                counter --;
                if (hotels.data[counter].name != null) {
                    document.getElementById('hotelName').innerHTML = hotels.data[counter].name;
                }
                if (hotels.data[counter].rating != null) {
                    document.getElementById('hotelRating').innerHTML = `Rating: ${hotels.data[counter].rating}/5`;
                }
                if (hotels.data[counter].price != null) {
                    document.getElementById('hotelPrice').innerHTML = `Price: ${hotels.data[counter].price}`;
                }
                if (hotels.data[counter].photo != null) {
                    document.getElementById('hotelImg').src = hotels.data[counter].photo.images.medium.url;
                }
                document.getElementById('addName').value = hotels.data[counter].name;
                document.getElementById('addRate').value = hotels.data[counter].price;
            }
        }
    }
    var authToken;
    var flights = [];
    function getFlights(origin, destination, departDate, returnDate, adults) {
        var settings = {
	        "async": true,
	        "crossDomain": true,
	        "url": `https://test.api.amadeus.com/v2/shopping/flight-offers?originLocationCode=${origin}&destinationLocationCode=${destination}&departureDate=${departDate}&returnDate=${returnDate}&adults=${adults}&max=30&currencyCode=USD`,
	        "method": "GET",
	        "headers": {
		        "Authorization": `${authToken}`
	        }
        }

        $.ajax(settings).done(function (response) {
            console.log(response);
            flights = response;
        });
        document.getElementById('prevFlight').style.display = "block";
        document.getElementById('nextFlight').style.display = "block";
        displayFlightForward();
    }
    var flightCounter = -1;
     function displayFlightForward() {
        if (flights.data != null) {
            if (flightCounter < flights.data.length) {
                flightCounter++;
                if (flights.data[flightCounter].itineraries != null) {
                    document.getElementById('flightOne').innerHTML = `${flights.data[flightCounter].itineraries[0].segments[0].departure.iataCode} TO ${flights.data[flightCounter].itineraries[0].segments[0].arrival.iataCode}`;
                    document.getElementById('flightTwo').innerHTML = `${flights.data[flightCounter].itineraries[1].segments[0].departure.iataCode} TO ${flights.data[flightCounter].itineraries[1].segments[0].arrival.iataCode}`;
                    document.getElementById('flight1Dur').innerHTML = `Duration: ${flights.data[flightCounter].itineraries[0].segments[0].duration}`;
                    document.getElementById('flight2Dur').innerHTML = `Duration: ${flights.data[flightCounter].itineraries[1].segments[0].duration}`;
                    var dateOne = flights.data[flightCounter].itineraries[0].segments[0].departure.at;
                    var dateTimeOne = dateOne.split("T");
                    document.getElementById('flight1Date').innerHTML = `Date: ${dateTimeOne[0]}`;
                    document.getElementById('flight1Time').innerHTML = `Time: ${dateTimeOne[1]}`;
                    var dateTwo = flights.data[flightCounter].itineraries[1].segments[0].departure.at;
                    var dateTimeTwo =dateTwo.split("T");
                    document.getElementById('flight2Date').innerHTML = `Date: ${dateTimeTwo[0]}`;
                    document.getElementById('flight2Time').innerHTML = `Time: ${dateTimeTwo[1]}`;
                    
                }
                if (flights.data[flightCounter].price != null) {
                    document.getElementById('flightPrice').innerHTML = `$${flights.data[flightCounter].price.total}`;
                }
            }
        }
         else
        {
            setTimeout(function() { displayFlightForward(); }, 10);
        }
    }
    function displayFlightBack() {
        if (flights.data != null) {
            if (flightCounter >= 0 ) {
                flightCounter--;
                if (flights.data[flightCounter].itineraries != null) {
                    document.getElementById('flightOne').innerHTML = `${flights.data[flightCounter].itineraries[0].segments[0].departure.iataCode}     TO     ${flights.data[flightCounter].itineraries[0].segments[0].arrival.iataCode}`;
                    document.getElementById('flightTwo').innerHTML = `${flights.data[flightCounter].itineraries[1].segments[0].departure.iataCode}     TO     ${flights.data[flightCounter].itineraries[1].segments[0].arrival.iataCode}`;
                    document.getElementById('flight1Dur').innerHTML = `Duration:${flights.data[flightCounter].itineraries[0].segments[0].duration}`;
                    document.getElementById('flight2Dur').innerHTML = `Duration:${flights.data[flightCounter].itineraries[1].segments[0].duration}`;
                    var dateOne = flights.data[flightCounter].itineraries[0].segments[0].departure.at;
                    var dateTimeOne = dateOne.split("T");
                    document.getElementById('flight1Date').innerHTML = `Date:${dateTimeOne[0]}`;
                    document.getElementById('flight1Time').innerHTML = `Time: ${dateTimeOne[1]}`;
                    var dateTwo = flights.data[flightCounter].itineraries[1].segments[0].departure.at;
                    var dateTimeTwo =dateTwo.split("T");
                    document.getElementById('flight2Date').innerHTML = `Date:${dateTimeTwo[0]}`;
                    document.getElementById('flight2Time').innerHTML = `Time:${dateTimeTwo[1]}`;
                    
                }
                if (flights.data[flightCounter].price != null) {
                    document.getElementById('flightPrice').innerHTML = `$${flights.data[flightCounter].price.total}`;
                }
            }
        }
    }
    function getAuth() {
        var origin = document.getElementById('origin').value;
        var destination = document.getElementById('destination').value;
        var departDate = document.getElementById('departDate').value;
        var returnDate = document.getElementById('returnDate').value;
        var adults = document.getElementById('flightAdults').value;
        var settings = {
	        "async": true,
	        "crossDomain": true,
	        "url": `https://test.api.amadeus.com/v1/security/oauth2/token`,
	        "method": "POST",
	        "headers": {
		        "Content-Type": "application/x-www-form-urlencoded"
            },
            "data": "grant_type=client_credentials&client_id=@APIkeys.flightApi&client_secret=@APIkeys.flightSecret"
        }

        $.ajax(settings).done(function (response) {
            console.log(response);
            authToken = `Bearer ${response.access_token}`
        });
        setTimeout(function() { getFlights(origin, destination, departDate, returnDate, adults); }, 1000);
    }
    function getWeather() {
        var settings = {
	        "async": true,
	        "crossDomain": true,
	        "url": "https://api.openweathermap.org/data/2.5/onecall?lat=@Model.Vacation.Lat&lon=@Model.Vacation.Long&units=imperial&appid=@APIkeys.weatherApi",
	        "method": "GET",
        }

        $.ajax(settings).done(function (response) {
            console.log(response);
            displayWeather(response);
        });
    }
    function displayWeather(response) {
        document.getElementById('tempToday').innerHTML = `Temp:${response.daily[0].temp.day}`;
        document.getElementById('conToday').innerHTML = response.daily[0].weather[0].description;
        var time1 = response.daily[1].dt;
        var date1 = new Date(0);
        document.getElementById('day1').innerHTML = date1.setUTCSeconds(time1);
        document.getElementById('day1Temp').innerHTML = `Temp:${response.daily[1].temp.day}`;
        document.getElementById('day1Con').innerHTML = response.daily[1].weather[0].description;
        var time1 = response.daily[2].dt;
        var date1 = new Date(0);
        document.getElementById('day2').innerHTML = date1.setUTCSeconds(time1);
        document.getElementById('day2Temp').innerHTML = `Temp:${response.daily[2].temp.day}`;
        document.getElementById('day2Con').innerHTML = response.daily[2].weather[0].description;
        var time1 = response.daily[3].dt;
        var date1 = new Date(0);
        document.getElementById('day3').innerHTML = date1.setUTCSeconds(time1);
        document.getElementById('day3Temp').innerHTML = `Temp:${response.daily[3].temp.day}`;
        document.getElementById('day3Con').innerHTML = response.daily[3].weather[0].description;
        var time1 = response.daily[4].dt;
        var date1 = new Date(0);
        document.getElementById('day4').innerHTML = date1.setUTCSeconds(time1);
        document.getElementById('day4Temp').innerHTML = `Temp:${response.daily[4].temp.day}`;
        document.getElementById('day4Con').innerHTML = response.daily[4].weather[0].description;
        var time1 = response.daily[5].dt;
        var date1 = new Date(0);
        document.getElementById('day5').innerHTML = date1.setUTCSeconds(time1);
        document.getElementById('day5Temp').innerHTML = `Temp:${response.daily[5].temp.day}`;
        document.getElementById('day5Con').innerHTML = response.daily[5].weather[0].description;
        var time1 = response.daily[6].dt;
        var date1 = new Date(0);
        document.getElementById('day6').innerHTML = date1.setUTCSeconds(time1);
        document.getElementById('day6Temp').innerHTML = `Temp:${response.daily[6].temp.day}`;
        document.getElementById('day6Con').innerHTML = response.daily[6].weather[0].description;
    }
    window.onload = getWeather;
</script>
        <script src="https://maps.googleapis.com/maps/api/js?key=@APIkeys.googleApi&libraries=places&callback=initMap" async defer></script>
