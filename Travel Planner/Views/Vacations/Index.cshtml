@model Travel_Planner.Models.TravelerPlacesViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    #map {
        height: 300px;
        width: 100%;
        border-radius: 20px;
        border-style: none;
    }

    #markersA {
        margin-top: 10px;
        margin-bottom: 10px;
        margin-right: 5px;
        background-color: lightgreen;
        border-color: none;
    }

    #markersB {
        margin-top: 10px;
        margin-bottom: 10px;
        margin-right: 5px;
        margin-left: 5px;
    }

    #markersC {
        margin-top: 10px;
        margin-bottom: 10px;
        margin-right: 5px;
        margin-left: 5px;
    }

    #Destination {
        margin-top: 10px;
    }

    #checkIn {
        width: 190px;
        margin-top: 10px;
        margin-right: 5px;
        margin-left: 5px;
    }

    #checkOut {
        width: 190px;
        margin-top: 10px;
        margin-right: 5px;
        margin-left: 5px;
    }

    #adults {
        width: 100px;
        margin-top: 10px;
        margin-right: 5px;
        margin-left: 5px;
    }

    #childs {
        width: 100px;
        margin-top: 10px;
        margin-right: 5px;
        margin-left: 5px;
    }

    #rooms {
        width: 100px;
        margin-top: 10px;
        margin-right: 5px;
        margin-left: 5px;
    }
    #destination{
        width: 200px;
        margin-top: 10px;
        margin-right: 5px;
    }
    #origin{
        width: 200px;
        margin-top: 10px;
        margin-right: 5px;
        margin-left: 5px;
    }
    input {
        display: inline-block;
        float: left;
    }

    label {
        display: inline-block;
        float: left;
    }

    #searchHotels {
        margin-top: 10px;
    }
    #searchFlights{
        margin-top: 10px;
    }
</style>
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h1 id="Destination">@Model.Vacation.Destination</h1>
        </div>
        <div class="col-md-5">
            <button class="btn btn" id="markersA" onclick="addMakersA()">@Model.Traveler.InterestOne</button>
            <button class="btn btn-info" id="markersB" onclick="addMarkersB()">@Model.Traveler.InterestTwo</button>
            <button class="btn btn-secondary" id="markersC" onclick="addMarkersC()">@Model.Traveler.InterestThree</button>
            <div id="map"></div>
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <form id="hotelInput" asp-action="Index" method="post">
                <div>
                    <h5>
                        <input type="hidden" value="@Model.Vacation.DestinationId" name="destinationId" />
                        <label style="margin-top: 20px;" for="checkIn">Check-In: </label>
                        <input class="form-control" id="checkIn" name="checkIn" type="date"/>
                        <label style="margin-top: 20px;" for="checkOut">Check-Out: </label>
                        <input class="form-control" id="checkOut"  name="checkOut" type="date" />
                        <input class="form-control" id="adults" type="number" name="adults" placeholder="Adults" min="1" max="9"/>
                        <input class="form-control" id="childs" type="number" name="childs" placeholder="Children" min="1" max="9"/>
                        <input class="form-control" id="rooms" type="number" name="rooms" placeholder="Rooms" min="1" max="9"/>
                        <button type="submit" id="searchHotels" class="btn btn-warning">Search Hotels</button>
                    </h5>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <button onclick="displayHotel()">push</button>
            <h5 id="hotel"></h5>
        </div>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <form asp-action="GetFlights" method="get">
                <h5>
                    <input class="form-control" type="text" name="destination" id="destination" placeholder="Departure Airport"/>
                    <input class="form-control" type="text" name="origin" id="origin" placeholder="Arrival Airport"/>
                    <button type="submit" id="searchFlights" class="btn btn-warning">Search Flights</button>
                </h5>
            </form>
        </div>
    </div>
</div>
<script>
    var placesOneLocations = [];
    var placesTwoLocations = [];
    var placesThreeLocations = [];
    var placesOneTitles = [];
    var placesTwoTitles = [];
    var placesThreeTitles = [];
    @for(int i = 0; i < Model.PlacesOne.results.Length; i++)
    {
        @:placesOneLocations.push({ lat: @Model.PlacesOne.results[i].geometry.location.lat, lng: @Model.PlacesOne.results[i].geometry.location.lng});
        @:placesOneTitles.push('@Model.PlacesOne.results[i].name');
    }
    @for(int i = 0; i < Model.PlacesTwo.results.Length; i++)
    {
        @:placesTwoLocations.push({ lat: @Model.PlacesTwo.results[i].geometry.location.lat, lng: @Model.PlacesTwo.results[i].geometry.location.lng});
        @:placesTwoTitles.push('@Model.PlacesTwo.results[i].name');
    }
    @for(int i = 0; i < Model.PlacesThree.results.Length; i++)
    {
        @:placesThreeLocations.push({ lat: @Model.PlacesThree.results[i].geometry.location.lat, lng: @Model.PlacesThree.results[i].geometry.location.lng});
        @:placesThreeTitles.push('@Model.PlacesThree.results[i].name');
    }
    var hotelNames = [];
    var hotelRate = [];
    var hotelRating = [];
    @if(Model.Hotels != null)
    {
        for(int i = 0; i < Model.Hotels.data.body.searchResults.results.Length; i++)
        {
            if(Model.Hotels.data.body.searchResults.results[i].name != null)
            {
                @:hotelNames.push('@Model.Hotels.data.body.searchResults.results[i].name');
            }
            if(Model.Hotels.data.body.searchResults.results[i].ratePlan.price.current != null)
            {
                @:hotelRate.push('@Model.Hotels.data.body.searchResults.results[i].ratePlan.price.current');
            }
            if(Model.Hotels.data.body.searchResults.results[i].guestReviews != null)
            {
                @:hotelRating.push('@Model.Hotels.data.body.searchResults.results[i].guestReviews.rating');
            }
        }
    }
    var map;
    var center = { lat: @Model.Vacation.Lat.Value, lng: @Model.Vacation.Long.Value };
    var worldBounds = {
        north: 85,
        south: -85,
        west: 200,
        east: -200,
    };
    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: center,
            disableDefaultUI: true,
            mapTypeId: 'terrain',
            restriction: {
                latLngBounds: worldBounds,
                strictBounds: false,
            },
            zoom: 11,
            minZoom: 2,
            styles:
                [
                    {
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#f5f5f5"
                            }
                        ]
                    },
                    {
                        "elementType": "labels.icon",
                        "stylers": [
                            {
                                "visibility": "on"
                            }
                        ]
                    },
                    {
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#616161"
                            }
                        ]
                    },
                    {
                        "elementType": "labels.text.stroke",
                        "stylers": [
                            {
                                "color": "#f5f5f5"
                            }
                        ]
                    }, {
                        "featureType": "administrative.country",
                        "elementType": "geometry.stroke",
                        "stylers": [
                            {
                                "visibility": "on",
                                "color": "#000000"
                            }
                        ]
                    }, {
                        "featureType": "administrative.province",
                        "elementType": "geometry.stroke",
                        "stylers": [
                            {
                                "visibility": "on",
                                "color": "#000000",
                            }
                        ]
                    }, {
                        "featureType": "administrative.locality",
                        "elementType": "geometry.stroke",
                        "stylers": [
                            {
                                "visibility": "on",
                                "color": "#616161"
                            }
                        ]
                    }, {
                        "featureType": "administrative.neighborhood",
                        "elementType": "geometry.stroke",
                        "stylers": [
                            {
                                "visibility": "on",
                                "color": "#616161"
                            }
                        ]
                    }, {
                        "featureType": "administrative.land_parcel",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "visibility": "on",
                                "color": "#616161"
                            }
                        ]
                    },
                    {
                        "featureType": "poi",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#eeeeee"
                            }
                        ]
                    },
                    {
                        "featureType": "poi",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#757575"
                            }
                        ]
                    },
                    {
                        "featureType": "poi.park",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#e5e5e5"
                            }
                        ]
                    },
                    {
                        "featureType": "poi.park",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#9e9e9e"
                            }
                        ]
                    },
                    {
                        "featureType": "road",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#ffffff"
                            }
                        ]
                    },
                    {
                        "featureType": "road.arterial",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#757575"
                            }
                        ]
                    },
                    {
                        "featureType": "road.highway",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#dadada"
                            }
                        ]
                    },
                    {
                        "featureType": "road.highway",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#616161"
                            }
                        ]
                    },
                    {
                        "featureType": "road.local",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#9e9e9e"
                            }
                        ]
                    },
                    {
                        "featureType": "transit.line",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#e5e5e5"
                            }
                        ]
                    },
                    {
                        "featureType": "transit.station",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#eeeeee"
                            }
                        ]
                    },
                    {
                        "featureType": "water",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#c9c9c9"
                            }
                        ]
                    },
                    {
                        "featureType": "water",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#9e9e9e"
                            }
                        ]
                    }
                ]
        });
    }
    var markersA = [];
    var markersB = [];
    var markersC = [];
    function addMakersA() {
        var i;
        if (markersA.length == 0) {
            for (i = 0; i < placesOneTitles.length; i++) {
                var marker = new google.maps.Marker({
                    position: placesOneLocations[i],
                    title: placesOneTitles[i],
                    animation: google.maps.Animation.DROP,
                    icon: {
                        url: "http://maps.google.com/mapfiles/ms/icons/green-dot.png"
                    }
                });
                markersA.push(marker);
            }
        }
        showMarkersA();
    }
    function showMarkersA() {
        var i;
        for (i = 0; i < markersA.length; i++) {
            markersA[i].setMap(map);
        }
        var j;
        for (j = 0; j < markersB.length; j++) {
            markersB[j].setMap(null);
        }
        var k;
        for (k = 0; k < markersC.length; k++) {
            markersC[k].setMap(null);
        }
    }
    function addMarkersB() {
        var i;
        if (markersB.length == 0) {
            for (i = 0; i < placesTwoTitles.length; i++) {
                var marker = new google.maps.Marker({
                    position: placesTwoLocations[i],
                    title: placesTwoTitles[i],
                    animation: google.maps.Animation.DROP,
                    icon: {
                        url: "http://maps.google.com/mapfiles/ms/icons/blue-dot.png"
                    }
                });
                markersB.push(marker);
            }
        }
        showMarkersB();
    }
    function showMarkersB() {
        var i;
        for (i = 0; i < markersA.length; i++) {
            markersA[i].setMap(null);
        }
        var j;
        for (j = 0; j < markersB.length; j++) {
            markersB[j].setMap(map);
        }
        var k;
        for (k = 0; k < markersC.length; k++) {
            markersC[k].setMap(null);
        }
    }
    function addMarkersC(){
        var i;
        if (markersC.length == 0) {
            for (i = 0; i < placesThreeTitles.length; i++) {
                var marker = new google.maps.Marker({
                    position: placesThreeLocations[i],
                    title: placesThreeTitles[i],
                    animation: google.maps.Animation.DROP,
                    icon: {
                        url: "http://maps.google.com/mapfiles/ms/icons/pink-dot.png"
                    }
                });
                markersC.push(marker);
            }
        }
        showMarkersC();
    }
    function showMarkersC() {
       var i;
        for (i = 0; i < markersA.length; i++) {
            markersA[i].setMap(null);
        }
        var j;
        for (j = 0; j < markersB.length; j++) {
            markersB[j].setMap(null);
        }
        var k;
        for (k = 0; k < markersC.length; k++) {
            markersC[k].setMap(map);
        }
    }
    var counter = 0;
    function displayHotel() {
        if (counter < hotelNames.length) {
            document.getElementById('hotel').innerHTML = hotelNames[counter];
            counter++;
        }
    }
    window.onload = displayHotel;
</script>
        <script src="https://maps.googleapis.com/maps/api/js?key=@APIkeys.googleApi&libraries=places&callback=initMap" async defer></script>
