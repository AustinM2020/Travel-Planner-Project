@model Travel_Planner.Models.TravelerPlacesViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    #map {
        height: 300px;
        width: 100%;
        border-radius: 20px;
        border-style: none;
    }

    #markersA {
        margin-bottom: 5px;
        margin-right: 5px;
        background-color: lightgreen;
        border-color: none;
    }

    #markersB {
        margin-bottom: 5px;
        margin-right: 5px;
        margin-left: 5px;
    }

    #markersC {
        margin-bottom: 5px;
        margin-right: 5px;
        margin-left: 5px;
    }

    #Destination {
        margin-top: 5px;
    }

    #checkIn {
        width: 170px;
    }

    #adults {
        width: 60px;
    }

    #nights {
        width: 60px;
    }
    #rooms {
        width: 60px;
    }
    #destination{
        width: 150px;
    }
    #origin{
        width: 150px;
    }
    input, label {
        display:block;
    }
    #departDate{
        width: 170px;
    }
    #returnDate{
        width: 170px;
    }
    #flightAdults{
        width: 60px;
    }
    #bucketList{
        width:100%;
        overflow-y:scroll;
        max-height:275px;
    }

</style>
<div class="container">
    <div class="row">
        @if (Model.Vacation.Destination.Contains(','))
        {
            string destination = Model.Vacation.Destination.Substring(0, Model.Vacation.Destination.IndexOf(',')).ToLower();
            if (destination.Contains(" "))
            {
                destination = destination.Replace(" ", "-");
            }
            var lat = Math.Round(Model.Vacation.Lat.Value, 2);
            var lng = Math.Round(Model.Vacation.Long.Value, 2);
            var lngString = lng.ToString();
            string coords = lat.ToString() + lngString;
            if (coords.Contains('-'))
            {
                coords = coords.Replace("-", "n");
            }
            coords = coords.Replace(".", "d");
            <div class="col-md-12">
                <a class="weatherwidget-io" href="https://forecast7.com/en/@coords/@destination/?unit=us" data-label_1="@destination.Replace("-", " ").ToUpper()" data-label_2="WEATHER" data-font="Noto Sans" data-theme="pure">@destination.Replace("-", " ").ToUpper() WEATHER</a>
                <script>
                    !function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0]; if (!d.getElementById(id)) { js = d.createElement(s); js.id = id; js.src = 'https://weatherwidget.io/js/widget.min.js'; fjs.parentNode.insertBefore(js, fjs); } }(document, 'script', 'weatherwidget-io-js');
                </script>
            </div>
        }
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h1 id="Destination">@Model.Vacation.Destination <span><br /><a style="text-decoration:none; color:red; font-size:small; position:relative; bottom:20px;" asp-action="Delete" asp-route-id="@Model.Vacation.Id">Delete Vacation</a></span></h1>
            <p style="position:relative; bottom:20px; margin-bottom:0;">@Model.Vacation.VacationStart.Value.ToShortDateString() - @Model.Vacation.VacationEnd.Value.ToShortDateString()</p>
        </div>
    </div>
</div>
<div>
    <input id="placeInput" type="text" />
    <button onclick="getPlaces()">Search</button>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-5">
            @if (Model.Traveler.InterestOne == "Local Attractions" || Model.Traveler.InterestOne == "Local Landmarks")
            {
                var interest = Model.Traveler.InterestOne.Split(" ");
                <button class="btn btn" id="markersA" onclick="addMakersA()">@interest[1]</button>
            }
            else
            {
                <button class="btn btn" id="markersA" onclick="addMakersA()">@Model.Traveler.InterestOne</button>
            }
            @if (Model.Traveler.InterestTwo == "Local Attractions" || Model.Traveler.InterestTwo == "Local Landmarks")
            {
                var interest = Model.Traveler.InterestTwo.Split(" ");
                <button class="btn btn-info" id="markersB" onclick="addMarkersB()">@interest[1]</button>
            }
            else
            {
                <button class="btn btn-info" id="markersB" onclick="addMarkersB()">@Model.Traveler.InterestTwo</button>
            }
            @if (Model.Traveler.InterestThree == "Local Attractions" || Model.Traveler.InterestThree == "Local Landmarks")
            {
                var interest = Model.Traveler.InterestThree.Split(" ");
                <button class="btn btn-secondary" id="markersC" onclick="addMarkersC()">@interest[1]</button>
            }
            else
            {
                <button class="btn btn-secondary" id="markersC" onclick="addMarkersC()">@Model.Traveler.InterestThree</button>
            }
            <div id="map"></div>
        </div>
        <div id="listAdd" class="col-md-7">
            <div style="position:relative; bottom:6px;" id="bucketList">
                <h2 style="color:black; width:100%; background-color:white; position:sticky; top:0; margin-top:0;">Bucket List</h2>
                <ul>
                    @foreach (var item in Model.Excursions)
                    {
                        if (item.Category != null)
                        {
                            if (Model.Traveler.InterestOne == item.Category)
                            {
                                @if (item.Category == "Local Attractions" || item.Category == "Local Landmarks")
                                {
                                    var interest = item.Category.Split(" ");
                                    <li style="margin-top: 10px; margin-bottom:10px;">@item.Name | Priority: @item.Importance | <span style="color: lightgreen">@interest[1]</span><br /><a style="text-decoration:none; color:red;" asp-action="DeleteExcur" asp-route-id="@item.Id">Remove</a></li>
                                }
                                else
                                {
                                    <li style="margin-top: 10px; margin-bottom:10px;">@item.Name | Priority: @item.Importance | <span style="color: lightgreen">@item.Category</span><br /><a style="text-decoration:none; color:red;" asp-action="DeleteExcur" asp-route-id="@item.Id">Remove</a></li>
                                }
                            }
                            else if (Model.Traveler.InterestTwo == item.Category)
                            {
                                @if (item.Category == "Local Attactions" || item.Category == "Local Landmarks")
                                {
                                    var interest = item.Category.Split(" ");
                                    <li style="margin-top: 10px; margin-bottom:10px;">@item.Name | Priority: @item.Importance | <span style="color: #6CC3D5">@interest[1]</span><br /><a style="text-decoration:none; color:red;" asp-action="DeleteExcur" asp-route-id="@item.Id">Remove</a></li>
                                }
                                else
                                {
                                    <li style="margin-top: 10px; margin-bottom:10px;">@item.Name | Priority: @item.Importance | <span style="color: #6CC3D5">@item.Category</span><br /><a style="text-decoration:none; color:red;" asp-action="DeleteExcur" asp-route-id="@item.Id">Remove</a></li>
                                }
                            }
                            else
                            {
                                @if (item.Category == "Local Attactions" || item.Category == "Local Landmarks")
                                {
                                    var interest = item.Category.Split(" ");
                                    <li style="margin-top: 10px; margin-bottom:10px;">@item.Name | Priority: @item.Importance | <span style="color: #F3969A">@interest[1]</span><br /><a style="text-decoration:none; color:red;" asp-action="DeleteExcur" asp-route-id="@item.Id">Remove</a></li>
                                }
                                else
                                {
                                    <li style="margin-top: 10px; margin-bottom:10px;">@item.Name | Priority: @item.Importance | <span style="color: #F3969A">@item.Category</span><br /><a style="text-decoration:none; color:red;" asp-action="DeleteExcur" asp-route-id="@item.Id">Remove</a></li>
                                }
                            }
                        }
                        else
                        {
                            <li style="margin-top: 10px; margin-bottom:10px;">@item.Name | Priority: @item.Importance<br /><a style="text-decoration:none; color:red;" asp-action="DeleteExcur" asp-route-id="@item.Id">Remove</a></li>
                        }
                    }
                </ul>
            </div>
            <form asp-action="addExcur" method="get">
                <input type="hidden" name="vacationId" value="@Model.Vacation.Id" />
                <div style="float:left; margin-right:10px;">
                    <label for="name">Add Activity</label>
                    <input style="width: 200px;" class="form-control" id="name" name="name"/>
                </div>
                <div style="float:left; margin-right:10px;">
                    <label for="Importance">Importance</label>
                    <input type="number" style="width: 100px;" class="form-control" name="Importance" min="1" max="10" />
                </div>
                <input type="hidden" id="category" name="category"/>
                <button style="margin-top: 30px;" type="submit" class="btn btn-warning">Add</button>
            </form>
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <form id="searchHotels" onsubmit="getHotels();return false">
                <h3 style="margin-top: 20px;">Search Hotels</h3>
                    <p>
                        <input id="destinationId" type="hidden" value="@Model.Vacation.DestinationId"/>
                        <div style="float:left; margin-right:10px;">
                            <label for="checkIn">Check-In</label>
                            <input class="form-control" id="checkIn" name="checkIn" type="date" />
                        </div>
                        <div style="float:left; margin-right:10px;">
                            <label for="nights">Nights</label>
                            <input title="Nights" class="form-control" id="nights" name="nights" type="number" min="1" max="9" />
                        </div>
                        <div style="float:left; margin-right:10px;">
                            <label for="adults">Adults</label>
                            <input title="Adults" class="form-control" id="adults" type="number" min="1" max="9" />
                        </div>
                        <div style="float:left; margin-right:10px;">
                            <label for="rooms">Rooms</label>
                            <input title="Rooms" class="form-control" id="rooms" type="number" name="rooms" min="1" max="9" />
                        </div>
                        <button style="margin-top: 30px;" type="submit" class="btn btn-warning">Search</button>
                    </p>
            </form>    
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-1">
            <button id="next" style="margin-top: 125px; display:none;" class="btn btn-info" onclick="displayHotelBack()">Prev</button>
        </div>
        <div class="col-md-5">
            <img style="width: 100%; height:250px; border-radius:10px; display:none; margin-bottom: 20px;" alt="No Photo Found" id="hotelImg"/>
        </div>
        <div class="col-md-5">
            <h1 id="hotelName"></h1>
            <h3 id="hotelRating"></h3>
            <h3 id="hotelPrice"></h3>
            <form asp-action="AddHotel" method="get">
                <div>
                    <input type="hidden" value="@Model.Vacation.Id" name="vacationId" />
                    <input type="date" style="display:none;" id="addCheckIn" name="addCheckIn" />
                    <input type="hidden" name="addName" id="addName" />
                    <input type="hidden" id="addNights" name="addNights" />
                    <input type="hidden" id="addAdults" name="addAdults" />
                    <input type="hidden" id="addRooms" name="addRooms" />
                    <input type="hidden" id="addRate" name="addRate" />
                    <input type="hidden" id="hotelOffer" name="link" />
                    <input type="hidden" id="hotelOfferName" name="linkName" />
                    <button type="submit" id="addHotel" target="_blank" class="btn btn-secondary" style="display:none;" >Select Hotel</button>
                </div>
            </form>
        </div>
        <div class="col-md-1">
            <button id="prev" style="margin-top: 125px; display:none;" class="btn btn-info" onclick="displayHotelForward()">Next</button>
        </div>
    </div>
</div>

<div class="container">
    <div class="row">
        <div style="background-color:#e0eaea" class="col-md-12">
            @if (Model.Hotels != null)
            {
                <h3>@Model.Hotels.Name</h3>
                <h3>@Model.Hotels.CheckIn.Value.ToShortDateString() | @Model.Hotels.Nights Nights | @Model.Hotels.NumberOfAdults Adults | @Model.Hotels.NumberOfRooms Rooms | @Model.Hotels.Rate</h3>
                <h3><a href="@Model.Hotels.Link">@Model.Hotels.LinkName</a></h3>
            }
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <form onsubmit="getAuth();return false">
                <h3>Search Flights</h3>
                <p>
                    <div style="float:left; margin-right:10px;">
                        <label for="origin">Departing Airport</label>
                        <input class="form-control" type="text" name="origin" id="origin" placeholder="Ex:MKE" />
                    </div>
                    <div style="float:left; margin-right:10px;">
                        <label for="destination">Arrival Airport</label>
                        <input class="form-control" type="text" name="destination" id="destination" placeholder="Ex:ORD" />
                    </div>
                    <div style="float:left; margin-right:10px;">
                        <label for="departDate">Departure Date</label>
                        <input class="form-control" type="date" id="departDate" name="departDate" />
                    </div>
                    <div style="float:left; margin-right:10px;">
                        <label for="returnDate">Return Date</label>
                        <input class="form-control" type="date" id="returnDate" name="returnDate" />
                    </div>
                    <div style="float:left; margin-right:10px;">
                        <label for="flightAdults">Adults</label>
                        <input class="form-control" type="number" id="flightAdults" name="flightAdults" min="1" max="9"/>
                    </div>
                    <button style="margin-top: 30px;" type="submit" id="searchFlights" class="btn btn-warning">Search Flights</button>
                </p>
            </form>
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-1">
            <button id="prevFlight" style="margin-top: 125px; display:none;" class="btn btn-info" onclick="displayFlightBack()">Prev</button>
        </div>
        <div class="col-md-10">
            <div>
                <ul style="list-style:none; list-style-type:none; text-align:center; font-size:200%" id="price">
                </ul>
            </div>
            <div>
                <h1 id="arrival" style="display:none; color:black; text-align:center; margin-left:20px;">Arrival Flights</h1>
                <ul style="list-style:none; list-style-type:none; text-align:center; font-size:200%" id="flightListArrival">
                </ul>
            </div>
            <div>
                <h1 id="return" style="color:black; text-align:center; margin-left:20px; display:none;">Return Flights</h1>
                <ul style="list-style:none; list-style-type:none; text-align:center; font-size:200%" id="flightListReturn">
                </ul>
            </div>
            <form asp-action="AddFlight" method="get">
                <input type="hidden" value="@Model.Vacation.Id" name="vacationId"/>
                <input type="hidden" name="airports" id="airports" />
                <input type="hidden" name="flightPrice" id="flightPrice" />
                <button id="selectFlight" style="display:none; margin-bottom:20px;" target="_blank" class="btn btn-secondary" type="submit">Select Flight</button>
            </form>
        </div>
        <div class="col-md-1">
            <button id="nextFlight" style="margin-top: 125px; display:none;" class="btn btn-info" onclick="displayFlightForward()">Next</button>
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
        <div style="background-color:#e0eaea" class="col-md-12">
            @if (Model.Flight != null)
            {
                <h1>@Model.Flight.Flights</h1>
                <h1>@Model.Flight.Price</h1>
            }
        </div>
    </div>
</div>
<script>
    var map;
    var service;
    var infowindow;
    var center = { lat: @Model.Vacation.Lat.Value, lng: @Model.Vacation.Long.Value };
    var worldBounds = {
        north: 85,
        south: -85,
        west: 200,
        east: -200,
    };
    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: center,
            disableDefaultUI: true,
            mapTypeId: 'terrain',
            restriction: {
                latLngBounds: worldBounds,
                strictBounds: false,
            },
            zoom: 11,
            minZoom: 2,
            styles:
                [
                    {
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#f5f5f5"
                            }
                        ]
                    },
                    {
                        "elementType": "labels.icon",
                        "stylers": [
                            {
                                "visibility": "on"
                            }
                        ]
                    },
                    {
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#616161"
                            }
                        ]
                    },
                    {
                        "elementType": "labels.text.stroke",
                        "stylers": [
                            {
                                "color": "#f5f5f5"
                            }
                        ]
                    }, {
                        "featureType": "administrative.country",
                        "elementType": "geometry.stroke",
                        "stylers": [
                            {
                                "visibility": "on",
                                "color": "#000000"
                            }
                        ]
                    }, {
                        "featureType": "administrative.province",
                        "elementType": "geometry.stroke",
                        "stylers": [
                            {
                                "visibility": "on",
                                "color": "#000000",
                            }
                        ]
                    }, {
                        "featureType": "administrative.locality",
                        "elementType": "geometry.stroke",
                        "stylers": [
                            {
                                "visibility": "on",
                                "color": "#616161"
                            }
                        ]
                    }, {
                        "featureType": "administrative.neighborhood",
                        "elementType": "geometry.stroke",
                        "stylers": [
                            {
                                "visibility": "on",
                                "color": "#616161"
                            }
                        ]
                    }, {
                        "featureType": "administrative.land_parcel",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "visibility": "on",
                                "color": "#616161"
                            }
                        ]
                    },
                    {
                        "featureType": "poi",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#eeeeee"
                            }
                        ]
                    },
                    {
                        "featureType": "poi",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#757575"
                            }
                        ]
                    },
                    {
                        "featureType": "poi.park",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#e5e5e5"
                            }
                        ]
                    },
                    {
                        "featureType": "poi.park",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#9e9e9e"
                            }
                        ]
                    },
                    {
                        "featureType": "road",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#ffffff"
                            }
                        ]
                    },
                    {
                        "featureType": "road.arterial",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#757575"
                            }
                        ]
                    },
                    {
                        "featureType": "road.highway",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#dadada"
                            }
                        ]
                    },
                    {
                        "featureType": "road.highway",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#616161"
                            }
                        ]
                    },
                    {
                        "featureType": "road.local",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#9e9e9e"
                            }
                        ]
                    },
                    {
                        "featureType": "transit.line",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#e5e5e5"
                            }
                        ]
                    },
                    {
                        "featureType": "transit.station",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#eeeeee"
                            }
                        ]
                    },
                    {
                        "featureType": "water",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "color": "#c9c9c9"
                            }
                        ]
                    },
                    {
                        "featureType": "water",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#9e9e9e"
                            }
                        ]
                    }
                ]
        });

       
    }
    var markers = [];
    var input;
    function getPlaces() {
        clearMarkers(map);
        var input = document.getElementById("placeInput").value;
        if (input[input.length - 1] == "s" || input[input.length - 1] == "S") {
            input = input.substring(0, input.length - 1)
        }
        console.log(input)
        var request = {
        location: center,
        radius: '500',
        type: [input]
        };

        service = new google.maps.places.PlacesService(map);
        service.nearbySearch(request, createMarker);
    }

    function createMarker(place) {
        console.log(place)
        for (let i = 0; i < place.length; i++) {
            var name = place[i].name;
            var marker = new google.maps.Marker({
                map,
                position: place[i].geometry.location,
                title: name,
                animation: google.maps.Animation.DROP,
                icon: {
                    url: "http://maps.google.com/mapfiles/ms/icons/blue-dot.png"
                }
            });
            (function (permalink) {
                google.maps.event.addListener(marker, 'click', function () {
                    document.getElementById("name").value = permalink;
                });
            })(name);

            markers.push(marker);
        }
    }

    function clearMarkers(map) {
        console.log(markers)
        for (var i = 0; i < markers.length; i++) {
            markers[i].setMap(null);
        }
    }


    var markersA = [];
    var markersB = [];
    var markersC = [];
    function addMakersA() {
        var i;
        if (markersA.length == 0) {
            for (i = 0; i < placesOneTitles.length; i++) {
                var name = `${placesOneTitles[i]}`;
                var category = "@Model.Traveler.InterestOne";
                var marker = new google.maps.Marker({
                    position: placesOneLocations[i],
                    title: placesOneTitles[i],
                    animation: google.maps.Animation.DROP,
                    icon: {
                        url: "http://maps.google.com/mapfiles/ms/icons/green-dot.png"
                    }
                });
                (function(permalink) {
                    google.maps.event.addListener(marker, 'click', function ()
                    {
                        document.getElementById("name").value = permalink;
                    });
                })(name);
                (function(permalink) {
                    google.maps.event.addListener(marker, 'click', function ()
                    {
                        document.getElementById("category").value = permalink;
                    });
                })(category);
                markersA.push(marker);
            }
        }
        showMarkersA();
    }
    function showMarkersA() {
        var i;
        for (i = 0; i < markersA.length; i++) {
            markersA[i].setMap(map);
        }
        var j;
        for (j = 0; j < markersB.length; j++) {
            markersB[j].setMap(null);
        }
        var k;
        for (k = 0; k < markersC.length; k++) {
            markersC[k].setMap(null);
        }
    }
    function addMarkersB() {
        var i;
        if (markersB.length == 0) {
            for (i = 0; i < placesTwoTitles.length; i++) {
                var name = `${placesTwoTitles[i]}`;
                var category = "@Model.Traveler.InterestTwo";
                var marker = new google.maps.Marker({
                    position: placesTwoLocations[i],
                    title: placesTwoTitles[i],
                    animation: google.maps.Animation.DROP,
                    icon: {
                        url: "http://maps.google.com/mapfiles/ms/icons/blue-dot.png"
                    }
                });
                (function(permalink) {
                    google.maps.event.addListener(marker, 'click', function ()
                    {
                        document.getElementById("name").value = permalink;
                    });
                })(name);
                (function(permalink) {
                    google.maps.event.addListener(marker, 'click', function ()
                    {
                        document.getElementById("category").value = permalink;
                    });
                })(category);
                markersB.push(marker);
            }
        }
        showMarkersB();
    }
    function showMarkersB() {
        var i;
        for (i = 0; i < markersA.length; i++) {
            markersA[i].setMap(null);
        }
        var j;
        for (j = 0; j < markersB.length; j++) {
            markersB[j].setMap(map);
        }
        var k;
        for (k = 0; k < markersC.length; k++) {
            markersC[k].setMap(null);
        }
    }
    function addMarkersC(){
        var i;
        if (markersC.length == 0) {
            for (i = 0; i < placesThreeTitles.length; i++) {
                var name = `${placesThreeTitles[i]}`;
                var category = "@Model.Traveler.InterestThree";
                var marker = new google.maps.Marker({
                    position: placesThreeLocations[i],
                    title: placesThreeTitles[i],
                    animation: google.maps.Animation.DROP,
                    icon: {
                        url: "http://maps.google.com/mapfiles/ms/icons/pink-dot.png"
                    }
                });
                (function(permalink) {
                    google.maps.event.addListener(marker, 'click', function ()
                    {
                        document.getElementById("name").value = permalink;
                    });
                })(name);
                (function(permalink) {
                    google.maps.event.addListener(marker, 'click', function ()
                    {
                        document.getElementById("category").value = permalink;
                    });
                })(category);
                markersC.push(marker);
            }
        }
        showMarkersC();
    }
    function showMarkersC() {
       var i;
        for (i = 0; i < markersA.length; i++) {
            markersA[i].setMap(null);
        }
        var j;
        for (j = 0; j < markersB.length; j++) {
            markersB[j].setMap(null);
        }
        var k;
        for (k = 0; k < markersC.length; k++) {
            markersC[k].setMap(map);
        }
    }
    var hotels = [];
    var counter = -1;
    function getHotels() {
        var destinationId = document.getElementById('destinationId').value;
        var checkIn = document.getElementById('checkIn').value;
        var nights = document.getElementById('nights').value;
        var adults = document.getElementById('adults').value;
        var rooms = document.getElementById('rooms').value;
        document.getElementById('addCheckIn').value = checkIn;
        document.getElementById('addNights').value = nights;
        document.getElementById('addAdults').value = adults;
        document.getElementById('addRooms').value = rooms;
        var settings = {
	        "async": true,
	        "crossDomain": true,
	        "url": `https://tripadvisor1.p.rapidapi.com/hotels/list?offset=0&currency=USD&limit=30&order=asc&lang=en_US&sort=recommended&location_id=${destinationId}&adults=${adults}&checkin=${checkIn}&rooms=${rooms}&nights=${nights}`,
	        "method": "GET",
	        "headers": {
		        "x-rapidapi-host": "tripadvisor1.p.rapidapi.com",
		        "x-rapidapi-key": "@APIkeys.hotelApi"
	        }
        }

        $.ajax(settings).done(function (response) {
            console.log(response);
            hotels = response;
        });
        counter = -1;
        document.getElementById('prev').style.display = 'block';
        document.getElementById('next').style.display = 'block';
        document.getElementById('hotelImg').style.display = 'block';
        document.getElementById('addHotel').style.display = 'block';
        displayHotelForward();
    }

    function displayHotelForward() {
        if (hotels.data != null) {
            if (counter < hotels.data.length) {
                counter++;
                if (hotels.data[counter].name != null) {
                    document.getElementById('hotelName').innerHTML = hotels.data[counter].name;
                }
                if (hotels.data[counter].rating != null) {
                    document.getElementById('hotelRating').innerHTML = `Rating: ${hotels.data[counter].rating}/5`;
                }
                if (hotels.data[counter].price != null) {
                    document.getElementById('hotelPrice').innerHTML = `Price: ${hotels.data[counter].price}`;
                }
                if (hotels.data[counter].photo != null) {
                    document.getElementById('hotelImg').src = hotels.data[counter].photo.images.medium.url;
                }
                if (hotels.data[counter].hac_offers.offers != null) {
                    document.getElementById('hotelOffer').value = hotels.data[counter].hac_offers.offers[0].link;
                    document.getElementById('hotelOfferName').value = hotels.data[counter].hac_offers.offers[0].provider_display_name;
                }
                document.getElementById('addName').value = hotels.data[counter].name;
                document.getElementById('addRate').value = hotels.data[counter].price;
            }

        }
        else
        {
            setTimeout(function() { displayHotelForward(); }, 10);
        }
    }
    function displayHotelBack() {
        if (hotels.data != null ) {
            if (counter >= 0) {
                counter --;
                if (hotels.data[counter].name != null) {
                    document.getElementById('hotelName').innerHTML = hotels.data[counter].name;
                }
                if (hotels.data[counter].rating != null) {
                    document.getElementById('hotelRating').innerHTML = `Rating: ${hotels.data[counter].rating}/5`;
                }
                if (hotels.data[counter].price != null) {
                    document.getElementById('hotelPrice').innerHTML = `Price: ${hotels.data[counter].price}`;
                }
                if (hotels.data[counter].photo != null) {
                    document.getElementById('hotelImg').src = hotels.data[counter].photo.images.medium.url;
                }
                document.getElementById('addName').value = hotels.data[counter].name;
                document.getElementById('addRate').value = hotels.data[counter].price;
            }
        }
    }
    var authToken;
    var flights = [];
    function getFlights(origin, destination, departDate, returnDate, adults) {
        var settings = {
	        "async": true,
	        "crossDomain": true,
	        "url": `https://test.api.amadeus.com/v2/shopping/flight-offers?originLocationCode=${origin}&destinationLocationCode=${destination}&departureDate=${departDate}&returnDate=${returnDate}&adults=${adults}&max=30&currencyCode=USD`,
	        "method": "GET",
	        "headers": {
		        "Authorization": `${authToken}`
	        }
        }

        $.ajax(settings).done(function (response) {
            console.log(response);
            flights = response;
        });
        document.getElementById('prevFlight').style.display = "block";
        document.getElementById('nextFlight').style.display = "block";
        document.getElementById('arrival').style.display = "block";
        document.getElementById('return').style.display = "block";
        document.getElementById('selectFlight').style.display = "block";
        document.getElementById("airports").value = `${origin} TO ${destination}`;
        displayFlightForward();
    }
    var flightCounter = -1;
     function displayFlightForward() {
        if (flights.data != null) {
            if (flightCounter < flights.data.length) {
                flightCounter++;
                if (flights.data[flightCounter].itineraries != null) {
                    $("#flightListArrival").empty();
                    $("#price").empty();
                    var price = document.createElement("LI");
                    var text = document.createTextNode(`Price: $${flights.data[flightCounter].price.total}`);
                    price.appendChild(text);
                    document.getElementById("price").appendChild(price);
                    document.getElementById(`flightPrice`).value = `Price: $${flights.data[flightCounter].price.total}`;
                    var i;
                    for (i = 0; i < flights.data[flightCounter].itineraries[0].segments.length; i++) {
                        var item = document.createElement("LI");
                        var flight = document.createTextNode(`${flights.data[flightCounter].itineraries[0].segments[i].departure.iataCode} TO ${flights.data[flightCounter].itineraries[0].segments[i].arrival.iataCode} | Time: ${flights.data[flightCounter].itineraries[0].segments[i].departure.at}`);
                        item.appendChild(flight);
                        document.getElementById("flightListArrival").appendChild(item);
                    }
                    var durOne = document.createElement("LI");
                    var durationOne = document.createTextNode(`Duration: ${flights.data[flightCounter].itineraries[0].duration}`);
                    durOne.appendChild(durationOne);
                    document.getElementById("flightListArrival").appendChild(durOne);
                    $("#flightListReturn").empty();
                    var j;
                    for (j = 0; j < flights.data[flightCounter].itineraries[1].segments.length; j++) {
                        var item = document.createElement("LI");
                        var flight = document.createTextNode(`${flights.data[flightCounter].itineraries[1].segments[j].departure.iataCode} TO ${flights.data[flightCounter].itineraries[1].segments[j].arrival.iataCode} | Time: ${flights.data[flightCounter].itineraries[1].segments[j].departure.at}`);
                        item.appendChild(flight);
                        document.getElementById("flightListReturn").appendChild(item);
                    }
                    var durTwo = document.createElement("LI");
                    var durationTwo = document.createTextNode(`Duration: ${flights.data[flightCounter].itineraries[1].duration}`);
                    durTwo.appendChild(durationTwo);
                    document.getElementById("flightListReturn").appendChild(durTwo);                    
                }
            }
        }
         else
        {
            setTimeout(function() { displayFlightForward(); }, 10);
        }
    }
    function displayFlightBack() {
        if (flights.data != null) {
            if (flightCounter < flights.data.length) {
                flightCounter--;
                if (flights.data[flightCounter].itineraries != null) {
                    $("#flightListArrival").empty();
                    $("#price").empty();
                    var price = document.createElement("LI");
                    var text = document.createTextNode(`Price: $${flights.data[flightCounter].price.total}`);
                    price.appendChild(text);
                    document.getElementById("price").appendChild(price);
                    document.getElementById(`flightPrice`).value = `Price: $${flights.data[flightCounter].price.total}`;
                    var i;
                    for (i = 0; i < flights.data[flightCounter].itineraries[0].segments.length; i++) {
                        var item = document.createElement("LI");
                        var flight = document.createTextNode(`${flights.data[flightCounter].itineraries[0].segments[i].departure.iataCode} TO ${flights.data[flightCounter].itineraries[0].segments[i].arrival.iataCode} | Time: ${flights.data[flightCounter].itineraries[0].segments[i].departure.at}`);
                        item.appendChild(flight);
                        document.getElementById("flightListArrival").appendChild(item);
                    }
                    var durOne = document.createElement("LI");
                    var durationOne = document.createTextNode(`Duration: ${flights.data[flightCounter].itineraries[0].duration}`);
                    durOne.appendChild(durationOne);
                    document.getElementById("flightListArrival").appendChild(durOne);
                    $("#flightListReturn").empty();
                    var j;
                    for (j = 0; j < flights.data[flightCounter].itineraries[1].segments.length; j++) {
                        var item = document.createElement("LI");
                        var flight = document.createTextNode(`${flights.data[flightCounter].itineraries[1].segments[j].departure.iataCode} TO ${flights.data[flightCounter].itineraries[1].segments[j].arrival.iataCode} | Time: ${flights.data[flightCounter].itineraries[1].segments[j].departure.at}`);
                        item.appendChild(flight);
                        document.getElementById("flightListReturn").appendChild(item);
                    }
                    var durTwo = document.createElement("LI");
                    var durationTwo = document.createTextNode(`Duration: ${flights.data[flightCounter].itineraries[1].duration}`);
                    durTwo.appendChild(durationTwo);
                    document.getElementById("flightListReturn").appendChild(durTwo);                    
                }
            }
        }
    }
    function getAuth() {
        var origin = document.getElementById('origin').value;
        var destination = document.getElementById('destination').value;
        var departDate = document.getElementById('departDate').value;
        var returnDate = document.getElementById('returnDate').value;
        var adults = document.getElementById('flightAdults').value;
        var settings = {
	        "async": true,
	        "crossDomain": true,
	        "url": `https://test.api.amadeus.com/v1/security/oauth2/token`,
	        "method": "POST",
	        "headers": {
		        "Content-Type": "application/x-www-form-urlencoded"
            },
            "data": "grant_type=client_credentials&client_id=@APIkeys.flightApi&client_secret=@APIkeys.flightSecret"
        }

        $.ajax(settings).done(function (response) {
            console.log(response);
            authToken = `Bearer ${response.access_token}`
        });
        setTimeout(function() { getFlights(origin, destination, departDate, returnDate, adults); }, 1000);
    }
</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=@APIkeys.googleApi&libraries=places&callback=initMap"></script>

